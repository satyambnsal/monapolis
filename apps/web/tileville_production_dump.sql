

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";






COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";





SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."fitrace_signup_emails" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying,
    "email" character varying
);


ALTER TABLE "public"."fitrace_signup_emails" OWNER TO "postgres";


ALTER TABLE "public"."fitrace_signup_emails" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."fitrace_signup_emails_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."game_scores" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "wallet_address" "text" NOT NULL,
    "competition_key" "text" NOT NULL,
    "game_id" bigint NOT NULL,
    "score" bigint NOT NULL,
    "updated_at" timestamp with time zone DEFAULT "now"()
);


ALTER TABLE "public"."game_scores" OWNER TO "postgres";


COMMENT ON COLUMN "public"."game_scores"."updated_at" IS 'last_updated';



CREATE TABLE IF NOT EXISTS "public"."global_config" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "config_values" "jsonb" NOT NULL,
    "name" "text"
);


ALTER TABLE "public"."global_config" OWNER TO "postgres";


ALTER TABLE "public"."global_config" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."global_config_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE "public"."game_scores" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."leaderboard_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."player_profile" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "wallet_address" "text" NOT NULL,
    "username" "text" NOT NULL,
    "fullname" "text",
    "avatar_url" "text"
);


ALTER TABLE "public"."player_profile" OWNER TO "postgres";


ALTER TABLE "public"."player_profile" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."player_profile_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."signup_emails" (
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "id" "uuid" DEFAULT "extensions"."uuid_generate_v4"() NOT NULL,
    "name" character varying NOT NULL,
    "email" character varying NOT NULL
);


ALTER TABLE "public"."signup_emails" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."tileville_builder_nfts" (
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "nft_id" bigint NOT NULL,
    "img_url" character varying NOT NULL,
    "price" bigint NOT NULL,
    "txn_hash" "text",
    "traits" "jsonb",
    "owner_address" "text",
    "name" "text" NOT NULL
);


ALTER TABLE "public"."tileville_builder_nfts" OWNER TO "postgres";


ALTER TABLE "public"."tileville_builder_nfts" ALTER COLUMN "nft_id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."tileville_builder_nfts_nft_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."tileville_competitions" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text" NOT NULL,
    "participation_fee" bigint,
    "seed" bigint DEFAULT '0'::bigint NOT NULL,
    "description" character varying NOT NULL,
    "poster_url" "text" DEFAULT '""'::"text",
    "end_date" timestamp with time zone NOT NULL,
    "funds" bigint DEFAULT '0'::bigint NOT NULL,
    "unique_keyname" "text" NOT NULL,
    "treasury_address" "text" DEFAULT 'B62qqhL8xfHBpCUTk1Lco2Sq8HitFsDDNJraQG9qCtWwyvxcPADn4EV'::"text",
    "start_date" timestamp with time zone NOT NULL,
    "priority" bigint DEFAULT '1'::bigint NOT NULL,
    "score_tweet_content" "text" DEFAULT '"Just conquered Nicobar with a score of ${score} in @TileVilleSocial üèÜ The strategic city-builder on @MinaProtocol is a must-play. Build your dream city: https://tileville.xyz #TileVille #MinaBlockchain"'::"text" NOT NULL,
    "competition_tweet_content" "text" DEFAULT 'Exciting news! I''m joining the next TileVille competition ${competitionName} on MINA blockchain. üöÄ Build your dream city, compete with players worldwide, and win MINA tokens! Competition starts soon - don''t miss out! üèÜ Join me at https://tileville.xyz/ #TileVille #MINABlockchain'::"text" NOT NULL,
    "prizes" "jsonb" DEFAULT '[]'::"jsonb",
    "is_speed_version" boolean DEFAULT false NOT NULL,
    "speed_duration" bigint DEFAULT '0'::bigint NOT NULL,
    "currency_symbol" "text" DEFAULT 'MINA'::"text" NOT NULL
);


ALTER TABLE "public"."tileville_competitions" OWNER TO "postgres";


COMMENT ON COLUMN "public"."tileville_competitions"."prizes" IS 'competition prizes';



ALTER TABLE "public"."tileville_competitions" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."tileville_competitions_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."transaction_logs" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "competition_key" "text" NOT NULL,
    "txn_hash" "text" NOT NULL,
    "wallet_address" "text" NOT NULL,
    "network" "text" DEFAULT ''::"text" NOT NULL,
    "txn_status" "text" DEFAULT '"PENDING"'::"text" NOT NULL,
    "is_game_played" boolean DEFAULT true NOT NULL
);


ALTER TABLE "public"."transaction_logs" OWNER TO "postgres";


ALTER TABLE "public"."transaction_logs" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."transaction_logs_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."umbra_signup_emails" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" character varying,
    "email" character varying,
    "message" "text"
);


ALTER TABLE "public"."umbra_signup_emails" OWNER TO "postgres";


ALTER TABLE "public"."umbra_signup_emails" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."umbra-signup-emails_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."voucher_codes" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "code" "text" NOT NULL,
    "is_redeemed" boolean DEFAULT false NOT NULL,
    "redeemed_by" "text",
    "redeemed_at" timestamp with time zone,
    "competition_id" bigint DEFAULT '0'::bigint,
    "expiry_date" timestamp with time zone DEFAULT "now"()
);


ALTER TABLE "public"."voucher_codes" OWNER TO "postgres";


COMMENT ON TABLE "public"."voucher_codes" IS 'Competition Voucher Codes';



ALTER TABLE "public"."voucher_codes" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."voucher_codes_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE ONLY "public"."fitrace_signup_emails"
    ADD CONSTRAINT "fitrace_signup_emails_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."global_config"
    ADD CONSTRAINT "global_config_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."game_scores"
    ADD CONSTRAINT "leaderboard_game_id_key" UNIQUE ("game_id");



ALTER TABLE ONLY "public"."game_scores"
    ADD CONSTRAINT "leaderboard_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."player_profile"
    ADD CONSTRAINT "player_profile_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."player_profile"
    ADD CONSTRAINT "player_profile_username_key" UNIQUE ("username");



ALTER TABLE ONLY "public"."player_profile"
    ADD CONSTRAINT "player_profile_wallet_address_key" UNIQUE ("wallet_address");



ALTER TABLE ONLY "public"."signup_emails"
    ADD CONSTRAINT "signup_emails_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."tileville_builder_nfts"
    ADD CONSTRAINT "tileVille_builders_nfts_img_url_key" UNIQUE ("img_url");



ALTER TABLE ONLY "public"."tileville_builder_nfts"
    ADD CONSTRAINT "tileVille_builders_nfts_nft_id_key" UNIQUE ("nft_id");



ALTER TABLE ONLY "public"."tileville_builder_nfts"
    ADD CONSTRAINT "tileVille_builders_nfts_txn_hash_key" UNIQUE ("txn_hash");



ALTER TABLE ONLY "public"."tileville_builder_nfts"
    ADD CONSTRAINT "tileville_builder_nfts_name_key" UNIQUE ("name");



ALTER TABLE ONLY "public"."tileville_builder_nfts"
    ADD CONSTRAINT "tileville_builder_nfts_pkey" PRIMARY KEY ("nft_id");



ALTER TABLE ONLY "public"."tileville_competitions"
    ADD CONSTRAINT "tileville_competitions_name_key" UNIQUE ("name");



ALTER TABLE ONLY "public"."tileville_competitions"
    ADD CONSTRAINT "tileville_competitions_pkey" PRIMARY KEY ("id", "unique_keyname");



ALTER TABLE ONLY "public"."transaction_logs"
    ADD CONSTRAINT "transaction_logs_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."transaction_logs"
    ADD CONSTRAINT "transaction_logs_txn_hash_key" UNIQUE ("txn_hash");



ALTER TABLE ONLY "public"."umbra_signup_emails"
    ADD CONSTRAINT "umbra-signup-emails_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."voucher_codes"
    ADD CONSTRAINT "voucher_codes_code_key" UNIQUE ("code");



ALTER TABLE ONLY "public"."voucher_codes"
    ADD CONSTRAINT "voucher_codes_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."game_scores"
    ADD CONSTRAINT "game_scores_game_id_fkey" FOREIGN KEY ("game_id") REFERENCES "public"."transaction_logs"("id");



CREATE POLICY "Enable read access for all users" ON "public"."game_scores" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."tileville_builder_nfts" FOR SELECT USING (true);



CREATE POLICY "create_player_profile_policy" ON "public"."player_profile" FOR INSERT TO "supabase_admin" WITH CHECK (true);



CREATE POLICY "create_transaction_logs" ON "public"."transaction_logs" FOR INSERT WITH CHECK (true);



ALTER TABLE "public"."fitrace_signup_emails" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."game_scores" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "game_scores_update" ON "public"."game_scores" FOR UPDATE TO "authenticated" USING (true);



ALTER TABLE "public"."global_config" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "insert_auth_leaderboard_policy" ON "public"."game_scores" FOR INSERT TO "authenticated" WITH CHECK (true);



CREATE POLICY "insert_fitrace_emails" ON "public"."fitrace_signup_emails" FOR INSERT WITH CHECK (true);



CREATE POLICY "insert_voucher_code" ON "public"."voucher_codes" FOR INSERT TO "supabase_admin" WITH CHECK (true);



ALTER TABLE "public"."player_profile" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "player_profile_update" ON "public"."player_profile" FOR UPDATE TO "supabase_admin" USING (true);



CREATE POLICY "select_all_player_profiles_policy" ON "public"."player_profile" FOR SELECT TO "supabase_admin" USING (true);



CREATE POLICY "select_all_policy" ON "public"."signup_emails" FOR SELECT USING (false);



CREATE POLICY "select_fitrace_sign_emails" ON "public"."fitrace_signup_emails" FOR SELECT USING (true);



CREATE POLICY "select_global_config" ON "public"."global_config" FOR SELECT USING (true);



CREATE POLICY "select_transaction_logs" ON "public"."transaction_logs" FOR SELECT USING (true);



CREATE POLICY "select_voucher_codes_public" ON "public"."voucher_codes" FOR SELECT TO "supabase_admin" USING (true);



ALTER TABLE "public"."tileville_builder_nfts" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."tileville_competitions" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "tileville_competitions_insert" ON "public"."tileville_competitions" FOR INSERT WITH CHECK (true);



CREATE POLICY "tileville_competitions_select" ON "public"."tileville_competitions" FOR SELECT USING (true);



ALTER TABLE "public"."transaction_logs" ENABLE ROW LEVEL SECURITY;


CREATE POLICY "update_auth_policy" ON "public"."signup_emails" FOR UPDATE WITH CHECK (false);



CREATE POLICY "update_transaction_logs" ON "public"."transaction_logs" FOR UPDATE USING (true);



CREATE POLICY "update_voucher_code_public" ON "public"."voucher_codes" FOR UPDATE TO "supabase_admin" USING (true);



ALTER TABLE "public"."voucher_codes" ENABLE ROW LEVEL SECURITY;




ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";


ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."transaction_logs";



GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";


















































































































































































































GRANT ALL ON TABLE "public"."fitrace_signup_emails" TO "anon";
GRANT ALL ON TABLE "public"."fitrace_signup_emails" TO "authenticated";
GRANT ALL ON TABLE "public"."fitrace_signup_emails" TO "service_role";



GRANT ALL ON SEQUENCE "public"."fitrace_signup_emails_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."fitrace_signup_emails_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."fitrace_signup_emails_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."game_scores" TO "anon";
GRANT ALL ON TABLE "public"."game_scores" TO "authenticated";
GRANT ALL ON TABLE "public"."game_scores" TO "service_role";



GRANT ALL ON TABLE "public"."global_config" TO "anon";
GRANT ALL ON TABLE "public"."global_config" TO "authenticated";
GRANT ALL ON TABLE "public"."global_config" TO "service_role";



GRANT ALL ON SEQUENCE "public"."global_config_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."global_config_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."global_config_id_seq" TO "service_role";



GRANT ALL ON SEQUENCE "public"."leaderboard_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."leaderboard_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."leaderboard_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."player_profile" TO "anon";
GRANT ALL ON TABLE "public"."player_profile" TO "authenticated";
GRANT ALL ON TABLE "public"."player_profile" TO "service_role";



GRANT ALL ON SEQUENCE "public"."player_profile_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."player_profile_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."player_profile_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."signup_emails" TO "anon";
GRANT ALL ON TABLE "public"."signup_emails" TO "authenticated";
GRANT ALL ON TABLE "public"."signup_emails" TO "service_role";



GRANT ALL ON TABLE "public"."tileville_builder_nfts" TO "anon";
GRANT ALL ON TABLE "public"."tileville_builder_nfts" TO "authenticated";
GRANT ALL ON TABLE "public"."tileville_builder_nfts" TO "service_role";



GRANT ALL ON SEQUENCE "public"."tileville_builder_nfts_nft_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."tileville_builder_nfts_nft_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."tileville_builder_nfts_nft_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."tileville_competitions" TO "anon";
GRANT ALL ON TABLE "public"."tileville_competitions" TO "authenticated";
GRANT ALL ON TABLE "public"."tileville_competitions" TO "service_role";



GRANT ALL ON SEQUENCE "public"."tileville_competitions_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."tileville_competitions_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."tileville_competitions_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."transaction_logs" TO "anon";
GRANT ALL ON TABLE "public"."transaction_logs" TO "authenticated";
GRANT ALL ON TABLE "public"."transaction_logs" TO "service_role";



GRANT ALL ON SEQUENCE "public"."transaction_logs_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."transaction_logs_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."transaction_logs_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."umbra_signup_emails" TO "anon";
GRANT ALL ON TABLE "public"."umbra_signup_emails" TO "authenticated";
GRANT ALL ON TABLE "public"."umbra_signup_emails" TO "service_role";



GRANT ALL ON SEQUENCE "public"."umbra-signup-emails_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."umbra-signup-emails_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."umbra-signup-emails_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."voucher_codes" TO "anon";
GRANT ALL ON TABLE "public"."voucher_codes" TO "authenticated";
GRANT ALL ON TABLE "public"."voucher_codes" TO "service_role";



GRANT ALL ON SEQUENCE "public"."voucher_codes_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."voucher_codes_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."voucher_codes_id_seq" TO "service_role";



ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";






























RESET ALL;
